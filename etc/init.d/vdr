#!/sbin/runscript
# Distributed under the terms of the GNU General Public License v2
# $Id$

opts="${opts} watchdogrestart"

. /etc/conf.d/vdr.watchdogd

common_init() {
	vdr_home=/var/vdr
	cd ${vdr_home}

	. /usr/share/vdr/inc/functions.sh
	include rc-functions
	include plugin-functions
	VDR_LOG_FILE=/var/vdr/tmp/vdr-start-log
}

clear_logfile() {
	rm -f "${VDR_LOG_FILE}"
	printf "" > "${VDR_LOG_FILE}"
}

#
# Used to log error-messages in startscript to show them on
# OSD later when choosing apropriate point in commands.
#

vdr_log()
{
	echo "$@" >> ${VDR_LOG_FILE}
}

depend() {
	need net
	[ "${IR_CTRL}" = "lirc" ] && need lircd
	use lircd coldplug
	after checkroot
}

start_vdr() {
	local exitcode

	einfo "Preparing start of vdr:"
	init_params
	add_daemonctrl_param --start --chdir ~vdr --exec ${VDR_BIN}
	init_plugin_loader start
	clear_logfile

	
	load_addons_prefixed pre-start || return 1

	ebegin "Starting ${VDRNAME}"

	unset MAIL
	export LOGNAME=vdr USER=vdr HOME="${vdr_home}"

	debug_msg "  CMDLINE:" start-stop-daemon "${daemonctrl_opts}" "--" "${vdr_opts}"

	local _openvt= openvt_opts= TERM_DEV=/dev/tty${TERMINAL}
	if [ -n "${TERMINAL}" -a -e "${TERM_DEV}" ]; then
		[ "${SWITCH_TO_TERMINAL}" = "yes" ] && openvt_opts="-s"
		_openvt="openvt -c ${TERMINAL} ${openvt_opts} --"

		{
			clear
			einfo "Starting ${VDRNAME}"
		} >${TERM_DEV}
	else
		add_param --daemon
	fi

	eval ${_openvt} start-stop-daemon ${daemonctrl_opts} -- ${vdr_opts}
	exitcode=$?
	eend $exitcode "Failed to start vdr."

	# TODO: Anything todo if starting fails? cleanups?
	if [ "${exitcode}" = "0" ]; then
		load_addons_prefixed post-start
		if [ "$?" != "0" ]; then
			exitcode=1
		fi

		# wenn nachrichten vorhanden sind
		if [ -s "${VDR_LOG_FILE}" ]; then
			/usr/share/vdr/bin/vdr-bg.sh svdrpsend.pl mesg "Errors: Go to Commands/View VDR Start Log"
		fi

	fi

	return $exitcode
}

stop_vdr() {
	init_plugin_loader stop

	load_addons_prefixed pre-stop

	ebegin "Stopping ${VDRNAME}"
	# Use --name here to allow us to kill vdr even after a new emerge
	start-stop-daemon --stop --quiet --retry 15 --exec ${VDR_BIN} 
	exitcode=$?
	eend $exitcode "Failed to stop vdr."

	load_addons_prefixed post-stop
	return $exitcode
}

start_watchdog() {
	[ "${ENABLE_EXTERNAL_WATCHDOG:-yes}" = "yes" ] || return 0
	ebegin "Starting vdr watchdog"
	start-stop-daemon \
		--start \
		--background \
		--make-pidfile \
		--pidfile /var/run/vdrwatchdog.pid \
		--exec /usr/sbin/vdr-watchdogd \
		--name vdr-watchdogd
	eend $? "failed starting vdr watchdog"
	return 0
}


stop_watchdog() {
	if [ "${ENABLE_EXTERNAL_WATCHDOG:-yes}" = "yes" ]; then
		ebegin "Stopping vdr watchdog"
		start-stop-daemon --stop --pidfile /var/run/vdrwatchdog.pid --name vdr-watchdogd
		eend $? "failed stopping watchdog"
	else
		# Also stop watchdog if conf was changed to disabled while it was running
		start-stop-daemon --stop --pidfile /var/run/vdrwatchdog.pid --name vdr-watchdogd --quiet
	fi
	return 0
}

start() {
	common_init
	start_vdr || return 1
	start_watchdog || return 2
}

stop() {
	common_init
	stop_watchdog || return 2
	stop_vdr
}

# gets called by watchdog to restart vdr
# and possibly reload modules
watchdogrestart() {
	common_init

	( stop_vdr )
	if test_vdr_process; then
		sleep 2
		test_vdr_process && killall -9 vdr
	fi

	load_addons_prefixed watchdog-restart

	( start_vdr )
}
