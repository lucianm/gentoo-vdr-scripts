#!/sbin/runscript
# Distributed under the terms of the GNU General Public License v2
# $Id$

opts="${opts} watchdogrestart"

source /usr/lib/vdr/inc/functions.sh
include rc-functions

depend() {
	use lircd dvbsplash
	need net
	after checkroot
}

start() {
	einfo "Preparing start of vdr:"
	getvdrversion
	init_params
	init_daemonctrl_params

	[[ -z "${VDR_BIN}" ]] && VDR_BIN=/usr/bin/vdr

	add_daemonctrl_param --start --chdir ~vdr --exec ${VDR_BIN}

	
	load_addons_prefixed pre-start || return 1

	ebegin "Starting vdr-${VDRVERSION}"

	#
	# finally start vdr
	# 
	/usr/bin/dvbsplash stop 2>/dev/null >/dev/null
	unset MAIL

	vdr_home=/var/vdr

	export LOGNAME=vdr
	export USER=vdr
	export HOME=${vdr_home}

	cd ${vdr_home}

	einfo_level2 start-stop-daemon "${daemonctrl_opts[@]}" -- "${vdr_opts[@]}"

	if [[ -z "${TERMINAL}" ]]; then
		start-stop-daemon "${daemonctrl_opts[@]}" \
			-- --daemon "${vdr_opts[@]}"
		exitcode=$?
	else
		TERMINAL=${TERMINAL/\/dev\/tty/}
		TERMINAL_DEVICE=/dev/tty${TERMINAL}
		{
			clear
			einfo "Starting vdr"
		} >${TERMINAL_DEVICE}

		# strange commandline, to be fixed in next versions
		openvt_opts=""
		if [[ "${SWITCH_TO_TERMINAL}" == "yes" ]]; then
			openvt_opts="${openvt_opts} -s"
		fi
		openvt -c ${TERMINAL} ${openvt_opts} -- \
			start-stop-daemon "${daemonctrl_opts[@]}" \
			-- "${vdr_opts[@]}"
		exitcode=$?
	fi
	eend $exitcode "Failed to start vdr."

	if [[ "${exitcode}" == "0" ]]; then
		load_addons_prefixed post-start || exitcode=1
	fi
	return $exitcode
}

stop() {
	getvdrversion

	load_addons_prefixed pre-stop

	ebegin "Stopping vdr-${VDRVERSION}"

	# Use --name here to allow us to kill vdr even after a new emerge
	start-stop-daemon --stop --quiet --retry 15 --name vdr
	eend $? "Failed to stop vdr."

	load_addons_prefixed post-stop
}

watchdogrestart() {

	export WATCHDOG_RESTART="1"
	/etc/init.d/vdr pause
	sleep 2
	test_vdr_process && /bin/killall -9 vdr
	sleep 1

	/etc/init.d/vdr zap

	load_addons_prefixed watchdog-restart

	/etc/init.d/vdr start
	unset WATCHDOG_RESTART
}
